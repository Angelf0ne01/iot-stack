version: "3"

services:
  # #reverse-proxy
  # nginx:
  #   image: nginx
  #   container_name: iot_nginx
  #   ports:
  #     - "${NGINX_PORT}:80"
  #   volumes:
  #     - "${NGINX_PATH_CONFIG}:/etc/nginx/conf.d"
  #   depends_on:
  #     - api_client
  #     - front_client
  #     - mongo-express
  #   links:
  #     - "api_client:api_client"
  #     - "front_client:front_client"
  #     - "mongo-express:mongo-express"

  # #back
  # api_client:
  #   image: node:14
  #   container_name: iot_api
  #   volumes:
  #     - "${VOLUME_FOLDER_BACK}:/usr/src/service"
  #   working_dir: /usr/src/service
  #   command: npm run start:api

  # #front
  # front_client:
  #   image: node:14
  #   container_name: iot_front
  #   volumes:
  #     - "${VOLUME_FOLDER_FRONT}:/usr/src/service"
  #   working_dir: /usr/src/service
  #   command: npm run dev
  # #db
  # mongodb:
  #   image: mongo
  #   container_name: iot_mongodb
  #   restart: always
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${DB_DATABASE}
  #   volumes:
  #     - ${VOLUME_FOLDER_DATABASE}/data:/data/db
  #     - ${VOLUME_FOLDER_DATABASE}/initdb.d/:/docker-entrypoint-initdb.d
  # #mongo-monitor
  # mongo-express:
  #   image: mongo-express
  #   container_name: iot_mongo_monitor
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=${DB_HOST}
  #     - ME_CONFIG_MONGODB_PORT=${DB_PORT}
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_USERNAME}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_PASSWORD}
  #     - ME_CONFIG_BASICAUTH_USERNAME=${DB_USERNAME}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${DB_PASSWORD}

  mosquitto:
    image: eclipse-mosquitto
    container_name: iot_mosquitto
    volumes:
      - ${MQTT_FOLDER}:/mosquitto
    ports:
      - 1883:1883
      - 9001:9001    

  #QUEUE
  # rabbitmq:
  #   image: "rabbitmq:3-management"
  #   container_name: iot_rabbitmq
  #   ports:
  #     - "${QUEUE_PORT_SERVICE}:5672"
  #     - "${QUEUE_PORT_WEB}:15672"
  #   volumes:
  #     - "rabbitmq_data:/data"

  # queue_client:
  #   image: node:14
  #   container_name: iot_queue
  #   volumes:
  #     - "${VOLUME_FOLDER_BACK}:/usr/src/service"
  #   working_dir: /usr/src/service
  #   command: npm run dev:queue
  #   depends_on:
  #     - rabbitmq

volumes:
  rabbitmq_data:
